version: '3.8'

services:
  auth-service:
    image: pokedex-auth-service:latest
    container_name: pokedex-auth-service
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-4000}:4000"
    environment:
      NODE_ENV: production
      PORT: ${PORT:-4000}
      DATABASE_URL: ${DATABASE_URL}
      JWT_PRIVATE_KEY_PATH: ./keys/private.pem
      JWT_PUBLIC_KEY_PATH: ./keys/public.pem
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000,http://localhost:5173}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
    volumes:
      - ./keys:/app/keys:ro
      - auth-data:/app/data
    networks:
      - pokedex-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mysql:
    image: mysql:8.0
    container_name: pokedex-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-auth_db}
      MYSQL_USER: ${MYSQL_USER:-auth_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - pokedex-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  auth-data:
  mysql-data:

networks:
  pokedex-network:
    driver: bridge
